// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: geeter.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the a+b.
type AddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A uint32 `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B uint32 `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *AddRequest) Reset() {
	*x = AddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geeter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRequest) ProtoMessage() {}

func (x *AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geeter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRequest.ProtoReflect.Descriptor instead.
func (*AddRequest) Descriptor() ([]byte, []int) {
	return file_geeter_proto_rawDescGZIP(), []int{0}
}

func (x *AddRequest) GetA() uint32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *AddRequest) GetB() uint32 {
	if x != nil {
		return x.B
	}
	return 0
}

// The response message containing the c.
type AddReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C uint32 `protobuf:"varint,1,opt,name=c,proto3" json:"c,omitempty"`
}

func (x *AddReply) Reset() {
	*x = AddReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geeter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReply) ProtoMessage() {}

func (x *AddReply) ProtoReflect() protoreflect.Message {
	mi := &file_geeter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReply.ProtoReflect.Descriptor instead.
func (*AddReply) Descriptor() ([]byte, []int) {
	return file_geeter_proto_rawDescGZIP(), []int{1}
}

func (x *AddReply) GetC() uint32 {
	if x != nil {
		return x.C
	}
	return 0
}

type GoodByeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GoodByeReq) Reset() {
	*x = GoodByeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geeter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodByeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodByeReq) ProtoMessage() {}

func (x *GoodByeReq) ProtoReflect() protoreflect.Message {
	mi := &file_geeter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodByeReq.ProtoReflect.Descriptor instead.
func (*GoodByeReq) Descriptor() ([]byte, []int) {
	return file_geeter_proto_rawDescGZIP(), []int{2}
}

func (x *GoodByeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GoodByeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replay string `protobuf:"bytes,1,opt,name=replay,proto3" json:"replay,omitempty"`
}

func (x *GoodByeResp) Reset() {
	*x = GoodByeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geeter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodByeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodByeResp) ProtoMessage() {}

func (x *GoodByeResp) ProtoReflect() protoreflect.Message {
	mi := &file_geeter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodByeResp.ProtoReflect.Descriptor instead.
func (*GoodByeResp) Descriptor() ([]byte, []int) {
	return file_geeter_proto_rawDescGZIP(), []int{3}
}

func (x *GoodByeResp) GetReplay() string {
	if x != nil {
		return x.Replay
	}
	return ""
}

type GoodMorningReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name int32 `protobuf:"varint,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GoodMorningReq) Reset() {
	*x = GoodMorningReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geeter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodMorningReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodMorningReq) ProtoMessage() {}

func (x *GoodMorningReq) ProtoReflect() protoreflect.Message {
	mi := &file_geeter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodMorningReq.ProtoReflect.Descriptor instead.
func (*GoodMorningReq) Descriptor() ([]byte, []int) {
	return file_geeter_proto_rawDescGZIP(), []int{4}
}

func (x *GoodMorningReq) GetName() int32 {
	if x != nil {
		return x.Name
	}
	return 0
}

type GoodMorningResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replay int32 `protobuf:"varint,1,opt,name=replay,proto3" json:"replay,omitempty"`
}

func (x *GoodMorningResp) Reset() {
	*x = GoodMorningResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geeter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodMorningResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodMorningResp) ProtoMessage() {}

func (x *GoodMorningResp) ProtoReflect() protoreflect.Message {
	mi := &file_geeter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodMorningResp.ProtoReflect.Descriptor instead.
func (*GoodMorningResp) Descriptor() ([]byte, []int) {
	return file_geeter_proto_rawDescGZIP(), []int{5}
}

func (x *GoodMorningResp) GetReplay() int32 {
	if x != nil {
		return x.Replay
	}
	return 0
}

type SayGoodNightReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SayGoodNightReq) Reset() {
	*x = SayGoodNightReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geeter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SayGoodNightReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayGoodNightReq) ProtoMessage() {}

func (x *SayGoodNightReq) ProtoReflect() protoreflect.Message {
	mi := &file_geeter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayGoodNightReq.ProtoReflect.Descriptor instead.
func (*SayGoodNightReq) Descriptor() ([]byte, []int) {
	return file_geeter_proto_rawDescGZIP(), []int{6}
}

func (x *SayGoodNightReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SayGoodNightResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replay string `protobuf:"bytes,1,opt,name=replay,proto3" json:"replay,omitempty"`
}

func (x *SayGoodNightResp) Reset() {
	*x = SayGoodNightResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geeter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SayGoodNightResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayGoodNightResp) ProtoMessage() {}

func (x *SayGoodNightResp) ProtoReflect() protoreflect.Message {
	mi := &file_geeter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayGoodNightResp.ProtoReflect.Descriptor instead.
func (*SayGoodNightResp) Descriptor() ([]byte, []int) {
	return file_geeter_proto_rawDescGZIP(), []int{7}
}

func (x *SayGoodNightResp) GetReplay() string {
	if x != nil {
		return x.Replay
	}
	return ""
}

var File_geeter_proto protoreflect.FileDescriptor

var file_geeter_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x67, 0x65, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01,
	0x61, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x62, 0x22,
	0x18, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x63, 0x22, 0x20, 0x0a, 0x0a, 0x47, 0x6f, 0x6f,
	0x64, 0x42, 0x79, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0b, 0x47,
	0x6f, 0x6f, 0x64, 0x42, 0x79, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x70, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x22, 0x24, 0x0a, 0x0e, 0x47, 0x6f, 0x6f, 0x64, 0x4d, 0x6f, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x47, 0x6f, 0x6f, 0x64,
	0x4d, 0x6f, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x22, 0x25, 0x0a, 0x0f, 0x53, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x10, 0x53, 0x61,
	0x79, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x32, 0xfe, 0x01, 0x0a, 0x07, 0x47, 0x72, 0x65, 0x65, 0x74,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x53, 0x61, 0x79, 0x41, 0x64, 0x64, 0x12, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x53, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x79, 0x65,
	0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x79, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x42, 0x79, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x0e, 0x53,
	0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x4d, 0x6f, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x4d, 0x6f, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x4d, 0x6f, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x28, 0x01,
	0x12, 0x45, 0x0a, 0x0c, 0x53, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64,
	0x4e, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_geeter_proto_rawDescOnce sync.Once
	file_geeter_proto_rawDescData = file_geeter_proto_rawDesc
)

func file_geeter_proto_rawDescGZIP() []byte {
	file_geeter_proto_rawDescOnce.Do(func() {
		file_geeter_proto_rawDescData = protoimpl.X.CompressGZIP(file_geeter_proto_rawDescData)
	})
	return file_geeter_proto_rawDescData
}

var file_geeter_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_geeter_proto_goTypes = []interface{}{
	(*AddRequest)(nil),       // 0: proto.AddRequest
	(*AddReply)(nil),         // 1: proto.AddReply
	(*GoodByeReq)(nil),       // 2: proto.GoodByeReq
	(*GoodByeResp)(nil),      // 3: proto.GoodByeResp
	(*GoodMorningReq)(nil),   // 4: proto.GoodMorningReq
	(*GoodMorningResp)(nil),  // 5: proto.GoodMorningResp
	(*SayGoodNightReq)(nil),  // 6: proto.SayGoodNightReq
	(*SayGoodNightResp)(nil), // 7: proto.SayGoodNightResp
}
var file_geeter_proto_depIdxs = []int32{
	0, // 0: proto.Greeter.SayAdd:input_type -> proto.AddRequest
	2, // 1: proto.Greeter.SayGoodBye:input_type -> proto.GoodByeReq
	4, // 2: proto.Greeter.SayGoodMorning:input_type -> proto.GoodMorningReq
	6, // 3: proto.Greeter.SayGoodNight:input_type -> proto.SayGoodNightReq
	1, // 4: proto.Greeter.SayAdd:output_type -> proto.AddReply
	3, // 5: proto.Greeter.SayGoodBye:output_type -> proto.GoodByeResp
	5, // 6: proto.Greeter.SayGoodMorning:output_type -> proto.GoodMorningResp
	7, // 7: proto.Greeter.SayGoodNight:output_type -> proto.SayGoodNightResp
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_geeter_proto_init() }
func file_geeter_proto_init() {
	if File_geeter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_geeter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geeter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geeter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodByeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geeter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodByeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geeter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodMorningReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geeter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodMorningResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geeter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SayGoodNightReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geeter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SayGoodNightResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_geeter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_geeter_proto_goTypes,
		DependencyIndexes: file_geeter_proto_depIdxs,
		MessageInfos:      file_geeter_proto_msgTypes,
	}.Build()
	File_geeter_proto = out.File
	file_geeter_proto_rawDesc = nil
	file_geeter_proto_goTypes = nil
	file_geeter_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// Sends a greeting
	SayAdd(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddReply, error)
	SayGoodBye(ctx context.Context, in *GoodByeReq, opts ...grpc.CallOption) (Greeter_SayGoodByeClient, error)
	SayGoodMorning(ctx context.Context, opts ...grpc.CallOption) (Greeter_SayGoodMorningClient, error)
	SayGoodNight(ctx context.Context, opts ...grpc.CallOption) (Greeter_SayGoodNightClient, error)
}

type greeterClient struct {
	cc grpc.ClientConnInterface
}

func NewGreeterClient(cc grpc.ClientConnInterface) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayAdd(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddReply, error) {
	out := new(AddReply)
	err := c.cc.Invoke(ctx, "/proto.Greeter/SayAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) SayGoodBye(ctx context.Context, in *GoodByeReq, opts ...grpc.CallOption) (Greeter_SayGoodByeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Greeter_serviceDesc.Streams[0], "/proto.Greeter/SayGoodBye", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterSayGoodByeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Greeter_SayGoodByeClient interface {
	Recv() (*GoodByeResp, error)
	grpc.ClientStream
}

type greeterSayGoodByeClient struct {
	grpc.ClientStream
}

func (x *greeterSayGoodByeClient) Recv() (*GoodByeResp, error) {
	m := new(GoodByeResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greeterClient) SayGoodMorning(ctx context.Context, opts ...grpc.CallOption) (Greeter_SayGoodMorningClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Greeter_serviceDesc.Streams[1], "/proto.Greeter/SayGoodMorning", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterSayGoodMorningClient{stream}
	return x, nil
}

type Greeter_SayGoodMorningClient interface {
	Send(*GoodMorningReq) error
	CloseAndRecv() (*GoodMorningResp, error)
	grpc.ClientStream
}

type greeterSayGoodMorningClient struct {
	grpc.ClientStream
}

func (x *greeterSayGoodMorningClient) Send(m *GoodMorningReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *greeterSayGoodMorningClient) CloseAndRecv() (*GoodMorningResp, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(GoodMorningResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greeterClient) SayGoodNight(ctx context.Context, opts ...grpc.CallOption) (Greeter_SayGoodNightClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Greeter_serviceDesc.Streams[2], "/proto.Greeter/SayGoodNight", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterSayGoodNightClient{stream}
	return x, nil
}

type Greeter_SayGoodNightClient interface {
	Send(*SayGoodNightReq) error
	Recv() (*SayGoodNightResp, error)
	grpc.ClientStream
}

type greeterSayGoodNightClient struct {
	grpc.ClientStream
}

func (x *greeterSayGoodNightClient) Send(m *SayGoodNightReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *greeterSayGoodNightClient) Recv() (*SayGoodNightResp, error) {
	m := new(SayGoodNightResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// Sends a greeting
	SayAdd(context.Context, *AddRequest) (*AddReply, error)
	SayGoodBye(*GoodByeReq, Greeter_SayGoodByeServer) error
	SayGoodMorning(Greeter_SayGoodMorningServer) error
	SayGoodNight(Greeter_SayGoodNightServer) error
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) SayAdd(context.Context, *AddRequest) (*AddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayAdd not implemented")
}
func (*UnimplementedGreeterServer) SayGoodBye(*GoodByeReq, Greeter_SayGoodByeServer) error {
	return status.Errorf(codes.Unimplemented, "method SayGoodBye not implemented")
}
func (*UnimplementedGreeterServer) SayGoodMorning(Greeter_SayGoodMorningServer) error {
	return status.Errorf(codes.Unimplemented, "method SayGoodMorning not implemented")
}
func (*UnimplementedGreeterServer) SayGoodNight(Greeter_SayGoodNightServer) error {
	return status.Errorf(codes.Unimplemented, "method SayGoodNight not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SayAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Greeter/SayAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SayAdd(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_SayGoodBye_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GoodByeReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreeterServer).SayGoodBye(m, &greeterSayGoodByeServer{stream})
}

type Greeter_SayGoodByeServer interface {
	Send(*GoodByeResp) error
	grpc.ServerStream
}

type greeterSayGoodByeServer struct {
	grpc.ServerStream
}

func (x *greeterSayGoodByeServer) Send(m *GoodByeResp) error {
	return x.ServerStream.SendMsg(m)
}

func _Greeter_SayGoodMorning_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GreeterServer).SayGoodMorning(&greeterSayGoodMorningServer{stream})
}

type Greeter_SayGoodMorningServer interface {
	SendAndClose(*GoodMorningResp) error
	Recv() (*GoodMorningReq, error)
	grpc.ServerStream
}

type greeterSayGoodMorningServer struct {
	grpc.ServerStream
}

func (x *greeterSayGoodMorningServer) SendAndClose(m *GoodMorningResp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *greeterSayGoodMorningServer) Recv() (*GoodMorningReq, error) {
	m := new(GoodMorningReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Greeter_SayGoodNight_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GreeterServer).SayGoodNight(&greeterSayGoodNightServer{stream})
}

type Greeter_SayGoodNightServer interface {
	Send(*SayGoodNightResp) error
	Recv() (*SayGoodNightReq, error)
	grpc.ServerStream
}

type greeterSayGoodNightServer struct {
	grpc.ServerStream
}

func (x *greeterSayGoodNightServer) Send(m *SayGoodNightResp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *greeterSayGoodNightServer) Recv() (*SayGoodNightReq, error) {
	m := new(SayGoodNightReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayAdd",
			Handler:    _Greeter_SayAdd_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SayGoodBye",
			Handler:       _Greeter_SayGoodBye_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SayGoodMorning",
			Handler:       _Greeter_SayGoodMorning_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "SayGoodNight",
			Handler:       _Greeter_SayGoodNight_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "geeter.proto",
}
